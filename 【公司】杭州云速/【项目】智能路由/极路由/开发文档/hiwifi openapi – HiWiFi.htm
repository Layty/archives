<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0043)https://code.hiwifi.com/wiki/hiwifi/openapi -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>
      hiwifi/openapi – HiWiFi
    </title>
    
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="https://code.hiwifi.com/search">
        <link rel="help" href="https://code.hiwifi.com/wiki/TracGuide">
        <link rel="alternate" href="https://code.hiwifi.com/wiki/hiwifi/openapi?format=txt" type="text/x-trac-wiki" title="纯文本">
        <link rel="up" href="https://code.hiwifi.com/wiki/hiwifi" title="查看父页面">
        <link rel="start" href="https://code.hiwifi.com/wiki">
        <link rel="stylesheet" href="./hiwifi openapi – HiWiFi_files/trac.css" type="text/css"><link rel="stylesheet" href="./hiwifi openapi – HiWiFi_files/wiki.css" type="text/css">
        <link rel="shortcut icon" href="https://code.hiwifi.com/chrome/common/trac.ico" type="image/x-icon">
        <link rel="icon" href="https://code.hiwifi.com/chrome/common/trac.ico" type="image/x-icon">
      <link type="application/opensearchdescription+xml" rel="search" href="https://code.hiwifi.com/search/opensearch" title="搜索 HiWiFi">
    <script type="text/javascript" src="./hiwifi openapi – HiWiFi_files/jquery.js"></script><script type="text/javascript" src="./hiwifi openapi – HiWiFi_files/babel.js"></script><script type="text/javascript" src="./hiwifi openapi – HiWiFi_files/zh_CN.js"></script><script type="text/javascript" src="./hiwifi openapi – HiWiFi_files/trac.js"></script><script type="text/javascript" src="./hiwifi openapi – HiWiFi_files/search.js"></script><script type="text/javascript" src="./hiwifi openapi – HiWiFi_files/folding.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $("#content").find("h1,h2,h3,h4,h5,h6").addAnchor(_("Link to this section"));
        $("#content").find(".wikianchor").each(function() {
          $(this).addAnchor(babel.format(_("Link to #%(id)s"), {id: $(this).attr('id')}));
        });
        $(".foldable").enableFolding(true, true);
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="https://code.hiwifi.com/"><img src="./hiwifi openapi – HiWiFi_files/hiwifi.png" alt="HiWiFi"></a>
      </div>
      <form id="search" action="https://code.hiwifi.com/search" method="get">
        <div>
          <label for="proj-search">搜索:</label>
          <input type="text" id="proj-search" name="q" size="18" value="">
          <input type="submit" value="搜索">
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="https://code.hiwifi.com/login">登录</a></li><li><a href="https://code.hiwifi.com/prefs">个人设置</a></li><li><a href="https://code.hiwifi.com/wiki/TracGuide">帮助/指南</a></li><li class="last"><a href="https://code.hiwifi.com/about">关于Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first active"><a href="https://code.hiwifi.com/wiki">Wiki</a></li><li><a href="https://code.hiwifi.com/report">查看任务单</a></li><li class="last"><a href="https://code.hiwifi.com/search">搜索</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="pagepath" class="noprint">
  <a class="pathentry first" title="查看 WikiStart" href="https://code.hiwifi.com/wiki">wiki</a><a class="pathentry" href="https://code.hiwifi.com/wiki/hiwifi" title="查看 hiwifi">hiwifi</a><span class="pathentry sep">/</span><a class="pathentry" href="./hiwifi openapi – HiWiFi_files/hiwifi openapi – HiWiFi.htm" title="查看 hiwifi/openapi">openapi</a>
</div>
      <div id="ctxtnav" class="nav">
        <h2>上下文导航</h2>
          <ul>
              <li class="first"><a href="https://code.hiwifi.com/wiki/hiwifi">向上</a></li><li><a href="https://code.hiwifi.com/wiki/WikiStart">起始页</a></li><li><a href="https://code.hiwifi.com/wiki/TitleIndex">索引</a></li><li class="last"><a href="https://code.hiwifi.com/wiki/hiwifi/openapi?action=history">历史</a></li>
          </ul>
        <hr>
      </div>
    <div id="content" class="wiki">
      <div class="wikipage searchable">
        
          
          <div class="trac-modifiedby">
            <span><a href="https://code.hiwifi.com/wiki/hiwifi/openapi?action=diff&version=17" title="版本 17 来自 jacquesqiao">最后修改于</a> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2014-11-04T16%3A56%3A25%2B08%3A00&precision=second" title="时间线中的2014-11-04T16:56:25+08:00">9个月</a> 前</span>
            <span class="trac-print">Last modified on 11/04/14 16:56:25</span>
          </div>
          <div id="wikipage"><h2 id="简介">简介<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#简介" title="链接到这一节"> ¶</a></h2>
<p>
openapi  接口有两个域名 openapi.hiwifi.com  和 client.openapi.hiwifi.com
</p>
<p>
当路由器安装了某个插件后，插件的作者就可以通过 openapi.hiwifi.com 来调用这个路由器里面的一些接口。能调用哪些接口是由插件安装时配置的。参见 <a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#appperm">插件权限</a>。 为了调用此 api, 调用者需要使用制作插件时候的 app_key 和  app_secret 来对请求签名。openapi.hiwifi.com 的 api 提供对单独路由器的调用，也提供对多个路由器的群发功能。调用路径如下图所示
</p>
<p>
<a style="padding:0; border:none" href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/callb.png"><img src="./hiwifi openapi – HiWiFi_files/callb.png"></a>
</p>
<p>
有时插件作者可能会有客户端软件，客户端通过 openapi.hiwifi.com 和安装插件的路由器绑定以后，就可以通过 client.openapi.hiwifi.com 直接调用绑定路由器里面的接口，接口权限和 openapi.hiwifi.com 的是相同的。绑定以后 openapi.hiwifi.com 会返回一个 client_secret, 调用 client.openapi.hiwifi.com 需要用此 client_secret 对请求签名。在路由器的局域网内，client.openapi.hiwifi.com 这个域名会被拦截到路由器本身，因此客户端只要访问 client.openapi.hiwifi.com 就可以直接访问到路由器而不经过外网。 client.openapi.hiwifi.com 仅提供对单个路由器的调用。无法提供群发功能。
</p>
<p>
绑定调用路径如下
</p>
<p>
<a style="padding:0; border:none" href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/bindcall.png"><img src="./hiwifi openapi – HiWiFi_files/bindcall.png"></a>
</p>
<p>
客户端远程和本地调用路径如下
</p>
<p>
<a style="padding:0; border:none" href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/clientcall.png"><img src="./hiwifi openapi – HiWiFi_files/clientcall.png"></a>
</p>
<p>
路由器对外提供的方法由 lua 编写，可以由插件进行扩展。方法以命名空间来组织，命名空间之间以 . 分割，例如 <tt> network.wireless.set_ssid </tt> 和 <tt> apps.sohutv.download_movie </tt> 都是合法的方法名。 命名空间的分配见 <a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#namespace">方法命名空间</a>
</p>
<h3 id="openapi.hiwifi.com接口">openapi.hiwifi.com 接口<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#openapi.hiwifi.com接口" title="链接到这一节"> ¶</a></h3>
<p>
openapi.hiwifi.com 提供一组 API 用于对路由器的绑定授权，查询路由器的工作状态，以及直接调用路由接口。
</p>
<ul><li>注意，调用者只能对安装了自己插件的路由器进行调用和查询状态，对没有安装自己插件的路由器是没有权限的。
</li></ul><p>
接口格式如下 
</p>
<pre class="wiki">http(s)://openapi.hiwifi.com/{action}?sign={sign}
</pre><p>
使用 POST 方式提交 JSON 格式的请求，Content-Type 需要设置为 application/json
</p>
<p>
sign 值生成规则如下(以 php 代码作为例子)
</p>
<pre class="wiki">$action = 'call';
$jsonbody = '{"app_id" : "12345", "app_name" : "abcd", "dev_id": "D4EE07012345" , "method": "network.wireless.set_ssid", data: { "ssid" : "HiWiFi_XXX" }}';
$app_secret = 'AAAAAAAAAAA';
$str = $action.$jsonbody.$app_secret;
$sign = md5($str);
</pre><p>
输出格式统一为 json ，格式如下
</p>
<pre class="wiki">{
    "app_code" : "路由器返回代码",
    "app_msg" : "路由器返回文字描述,
    "app_data" : { "路由器返回的其他数据" },
    "code" : "平台返回代码",
    "msg" : "平台返回文字描述,
    "data" : { "平台返回其他数据" }
}
</pre><p>
code 表明操作是否执行成功，0 表示成功，其他错误请参见 <a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#errortable">错误列表</a>
</p>
<h4 id="action包含">action 包含：<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#action包含" title="链接到这一节"> ¶</a></h4>
<p>
<a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#bind">bind  绑定</a><br>
<a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#unbind">unbind  解除绑定</a><br>
<a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#call">call 调用api</a><br>
<a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#status">status 获取状态</a><br>
<a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#call_multi">call_multi 多设备调用</a><br>
<a class="wiki" href="https://code.hiwifi.com/wiki/hiwifi/openapi#call_multi_result">call_multi_result 查询 call_multi 请求的结果</a><br>
</p>
<h4 id="bind">bind<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#bind" title="链接到这一节"> ¶</a></h4>
<p>
bind 接口用于对设备授权，插件作者可以通过调用此 API 来授权其某个客户端对安装了本插件的某台特定路由器进行调用。参数验证通过后，服务器会生成一个 client_secret, 首先调用路由器端的授权接口下发此 client_secret, 成功则返回此 client_secret
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要好包含空格及其他特殊符号
</td></tr><tr><td>client_id</td><td>string</td><td>插件作者需要绑定客户端安装实例的 ID,  插件作者客户端app_id + client_id 可以唯一确定一个 app  安装实例
</td></tr><tr><td>dev_id</td><td>string</td><td>需要绑定的路由器id, 即MAC 地址，全大写
</td></tr><tr><td>permissions</td><td>object</td><td>可选参数，需要授权的 API 命名空间列表. 默认只可以调用所有 apps.{app_id}.下面所有方法
</td></tr><tr><td>expire_period</td><td>int</td><td>可选参数，授权过期时间(暂未实现)
</td></tr></tbody></table>
<p>
输出 data 对象：
</p>
<table class="wiki">
<tbody><tr><td>字段名</td><td>类型</td><td>说明
</td></tr><tr><td>client_secret</td><td>string</td><td>授权完成的secret，可以用于对 client.openapi.hiwifi.com 调用的签名
</td></tr></tbody></table>
<ul><li>注意，路由器重置后，授权将自动丢失，可以重新调用此接口来进行授权。
</li></ul><h4 id="unbind">unbind<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#unbind" title="链接到这一节"> ¶</a></h4>
<p>
unbind 接口用于对取消对设备授权，解绑后客户端将不再能调用此路由器
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要包含空格及其他特殊符号
</td></tr><tr><td>client_id</td><td>string</td><td>插件作者需要绑定客户端安装实例的 ID,  插件作者客户端app_id + client_id 可以唯一确定一个 app  安装实例
</td></tr><tr><td>dev_id</td><td>string</td><td>需要绑定的路由器id, 即MAC 地址，全大写
</td></tr></tbody></table>
<p>
输出 data 对象
</p>
<h4 id="status">status<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#status" title="链接到这一节"> ¶</a></h4>
<p>
status 接口用于查询路由器一些基本信息，目前只支持在线状态。
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要好包含空格及其他特殊符号
</td></tr><tr><td>dev_id</td><td>string</td><td>需要绑定的路由器id, 即MAC 地址，全大写
</td></tr></tbody></table>
<p>
输出 data 对象：
</p>
<table class="wiki">
<tbody><tr><td>字段名</td><td>类型</td><td>说明
</td></tr><tr><td>is_online</td><td>int</td><td>1为在线，0为离线
</td></tr></tbody></table>
<h4 id="call">call<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#call" title="链接到这一节"> ¶</a></h4>
<p>
call 接口用于直接对路由器中的接口进行同步调用，此接口只支持单台路由器调用。如果路由器不在线，将返回错误。
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要好包含空格及其他特殊符号
</td></tr><tr><td>dev_id</td><td>string</td><td>需要调用路由器id, 即MAC 地址，全大写
</td></tr><tr><td>timeout</td><td>string</td><td>超时时间，以秒为单位，超过此时间将返回一个超时错误
</td></tr><tr><td>method</td><td>string</td><td>需要调用的方法名
</td></tr><tr><td>data</td><td>object</td><td>方法需要的参数
</td></tr></tbody></table>
<p>
输出 data 对象：
</p>
<table class="wiki">
<tbody><tr><td>字段名</td><td>类型</td><td>说明
</td></tr><tr><td>code</td><td>int</td><td>返回代码，0为成功
</td></tr><tr><td>data</td><td>string</td><td>路由器接口输出内容
</td></tr></tbody></table>
<h4 id="call_multi">call_multi<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#call_multi" title="链接到这一节"> ¶</a></h4>
<p>
call_multi 接口用于对多台路由器的接口进行调用，此接口支持对多台路由器进行调用，但是必须是异步方式，从此接口无法立即得到执行结果，即使有路由器不在线也不会立即返回错误。
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要包含空格及其他特殊符号
</td></tr><tr><td>dev_ids</td><td>object或string</td><td>如果是列表，则调用列表中的所有路由器，如果是字符串，则调用这一台路由器，如果字符串为 "all"，则表示要对所有安装了此插件的路由器进行调用
</td></tr><tr><td>skip_offline</td><td>int</td><td>可选参数，是否跳过不在线的路由器，为 1时，则所有在命令发出时不在线的路由器将被立即跳过，否则命令将会被暂存至路由器上线再进行推送，超过 timeout 时间后如果还没有上线，此命令将被丢弃
</td></tr><tr><td>timeout</td><td>int</td><td>可选参数，超时时间，以秒为单位，默认为1天即 86400 秒，在超时时间前，服务器将会保存此次调用的执行结果供查询，对于未上线的路由器，也会存储命令待其上线再进行推送，超时时间到以后此次执行结果将会被删除
</td></tr><tr><td>method</td><td>string</td><td>需要调用的方法名
</td></tr><tr><td>data</td><td>object</td><td>方法需要的参数
</td></tr></tbody></table>
<p>
输出 data 对象：
</p>
<table class="wiki">
<tbody><tr><td>字段名</td><td>类型</td><td>说明
</td></tr><tr><td>code</td><td>int</td><td>返回代码，0为成功
</td></tr><tr><td>request_id</td><td>string</td><td>本次查询的请求 id
</td></tr></tbody></table>
<h4 id="call_multi_result">call_multi_result<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#call_multi_result" title="链接到这一节"> ¶</a></h4>
<p>
call_multi_result 接口用于查询 call_multi 请求的结果，请求结果将会被保留到超时时间以后删除。
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要包含空格及其他特殊符号
</td></tr><tr><td>request_id</td><td>string</td><td>call_multi调用时返回的请求 id
</td></tr></tbody></table>
<p>
输出 data 对象：
</p>
<table class="wiki">
<tbody><tr><td>字段名</td><td>类型</td><td>说明
</td></tr><tr><td>code</td><td>int</td><td>返回代码，0为成功
</td></tr><tr><td>results</td><td>object</td><td style="text-align: left">执行结果，此 object 是一个数组，每个元素是一个 object, 包含三个成员，"dev_id" , "code",  "data"。数组里面存放的是所有有回应的路由器的输出结果，没有回应或者没有下发的都不在这里出现。 
</td></tr></tbody></table>
<h3 id="client.openapi.hiwifi.com接口">client.openapi.hiwifi.com 接口<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#client.openapi.hiwifi.com接口" title="链接到这一节"> ¶</a></h3>
<p>
client.openapi.hiwifi.com 提供 API 用于对已经绑定的路由器进行接口调用。
</p>
<p>
接口格式如下 
</p>
<pre class="wiki">http://client.openapi.hiwifi.com/{action}?sign={sign}&amp;dev_id={dev_id}
</pre><ul><li>注意此接口不支持 https。
</li></ul><p>
使用 POST 方式提交 JSON 格式的请求，Content-Type 需要设置为 application/json
</p>
<p>
dev_id 为欲调用的设备的MAC地址
</p>
<p>
sign 值生成规则如下(以 php 代码作为例子)
</p>
<pre class="wiki">$action = 'call';
$jsonbody = '{"app_id" : "12345", "app_name" : "abcd", "client_id" : "abcdefgh", "dev_id": "D4EE07010000" , data: { "a" : "aa" }}';
$client_secret = 'AAAAAAAAAAA';  // 这个是在 bind 接口调用返回的 client_secret
$str = $action.$jsonbody.$client_secret;
$sign = md5($str);
</pre><p>
输出格式统一为 json ，格式如下
</p>
<pre class="wiki">{
    "app_code" : "路由器返回代码",
    "app_msg" : "路由器返回文字描述,
    "app_data" : { "路由器返回的其他数据" },
    "code" : "平台返回代码",
    "msg" : "平台返回文字描述,
    "data" : { "平台返回其他数据" }
}
</pre><h4 id="call1">call<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#call1" title="链接到这一节"> ¶</a></h4>
<p>
call 接口用于直接对路由器中的接口进行同步调用，此接口只支持单台路由器调用。如果路由器不在线，将返回错误。
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要好包含空格及其他特殊符号
</td></tr><tr><td>client_id</td><td>string</td><td>客户端 id
</td></tr><tr><td>dev_id</td><td>string</td><td>需要调用路由器id, 即MAC 地址，全大写
</td></tr><tr><td>timeout</td><td>string</td><td>超时时间，以秒为单位，超过此时间将返回一个超时错误
</td></tr><tr><td>method</td><td>string</td><td>需要调用的方法名
</td></tr><tr><td>data</td><td>object</td><td>方法需要的参数
</td></tr></tbody></table>
<p>
输出 data 对象：
</p>
<table class="wiki">
<tbody><tr><td>字段名</td><td>类型</td><td>说明
</td></tr><tr><td>code</td><td>int</td><td>返回代码，0为成功
</td></tr><tr><td>data</td><td>string</td><td>路由器接口输出内容
</td></tr></tbody></table>
<ul><li>在局域网环境下，此域名会被劫持至路由器端，从而实现直接对路由器接口的调用，但是为了防止出现客户端走到其他的极路由下面造成无法访问接口的现象，路由器会检查 dev_id 是否和自己一致，如果不一致将会将这个请求直接 proxy 到外网的对应服务器上。如果一致将会由本地路由器处理。
</li></ul><h4 id="status1">status<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#status1" title="链接到这一节"> ¶</a></h4>
<p>
status 接口用于查询路由器一些基本信息，目前只支持在线状态。
</p>
<p>
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr><tr><td>app_id</td><td>string</td><td>插件的 APP_KEY, 可以从 open.hiwifi.com 插件基本信息页面看到
</td></tr><tr><td>app_name</td><td>string</td><td>插件名字, 申请插件的时候取的，不要好包含空格及其他特殊符号
</td></tr><tr><td>client_id</td><td>string</td><td>客户端 id
</td></tr><tr><td>dev_id</td><td>string</td><td>需要绑定的路由器id, 即MAC 地址，全大写
</td></tr></tbody></table>
<p>
输出 data 对象：
</p>
<table class="wiki">
<tbody><tr><td>字段名</td><td>类型</td><td>说明
</td></tr><tr><td>is_online</td><td>int</td><td>1为在线，0为离线
</td></tr></tbody></table>
<ul><li>此接口和 openapi.hiwifi.com 的看起来非常相似，不同点在于，当路由器无法上外网时候，用 openapi.hiwifi.com 查询将会失败或者报不在线，也无法调用此路由器，而用此接口对本路由器的 dev_id 查询可以返回 online。换句话说。此接口只要返回 online, 就可以正常对 dev_id 路由器进行调用，而不用管它到底有没有连接外网。
</li></ul><h4 id="router_info">router_info<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#router_info" title="链接到这一节"> ¶</a></h4>
<p>
router_info接口返回路由器的系统版本，mac地址等信息
输入参数:
</p>
<table class="wiki">
<tbody><tr><td>参数名</td><td>类型</td><td>说明
</td></tr></tbody></table>
<p>
返回结果
</p>
<pre class="wiki">{
    "app_msg": "",
    "source": "1",
    "code": "0",
    "app_code": "0",
    "msg": "",
    "data": "",
    "app_data": {
        "mac": "D4EE07XXXXXX",
        "version": "0.9004.3505s",
        "board": "HC5661"
    }
}
</pre><h2 id="namespace">方法命名空间<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#namespace" title="链接到这一节"> ¶</a></h2>
<p>
路由器导出的方法列表以命名空间来划分，例如 system 表示系统级别的 API,  component 表示系统自带组件的 API，此外还有一些特殊的命名空间，常见命名空间如下表所示
</p>
<table class="wiki">
<tbody><tr><td>命名空间</td><td>含义
</td></tr><tr><td>system</td><td style="text-align: left">系统相关 API, 例如 system.admin.reboot 方法可以重启路由器 
</td></tr><tr><td>component</td><td style="text-align: left">系统组件相关 API，如 component.aria2.download 
</td></tr><tr><td>apps</td><td>插件自有API, 一般格式为 apps.&lt;appid&gt;.方法名，用于存放插件特有的 API，默认的 bind 授权仅授予此命名空间下此插件空间的 API
</td></tr><tr><td>legacy</td><td>历史接口适配，新接口应该尽量避免使用，例如 legacy.luci 接口下面可以桥接到原来的 luci API
</td></tr><tr><td>unsigned</td><td>位于此命名空间下的函数都不需要验证sign字串，这类调用是为某些特殊需求的客户准备的，一般情况不要使用
</td></tr></tbody></table>
<h2 id="appperm">插件权限管理<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#appperm" title="链接到这一节"> ¶</a></h2>
<p>
从路由器的角度来看，插件权限有几种情况。
</p>
<ol><li>插件作者的远程服务器可以调用这个插件被允许调用的所有 API，
</li></ol><ol start="2"><li>当插件作者有客户端安装时候，此时可以通过 bind 接口授权来为单独的客户端和单独的路由器建立信任关系。授权默认只提供 apps.&lt;app_id&gt;. 下面所有的权限。可以单独在 bind 接口中列出所需权限，权限最大不得超过这个插件本身被允许调用的所有 API。
</li></ol><ol start="3"><li>对于 unsigned 命名空间下的接口，因为它不需要验证签名，所以不进行权限控制，服务器端对见到的此类报文一概拒绝，路由器端见到此接口只判断此 API 是否存在。
</li></ol><h3 id="errortable">errortable<a class="anchor" href="https://code.hiwifi.com/wiki/hiwifi/openapi#errortable" title="链接到这一节"> ¶</a></h3>
<table class="wiki">
<tbody><tr><td>code</td><td>描述
</td></tr><tr><td>0</td><td>执行成功
</td></tr><tr><td>100001</td><td>系统内部错误
</td></tr><tr><td>100002</td><td>方法解析失败
</td></tr><tr><td>100003</td><td>权限认证失败
</td></tr><tr><td>100004</td><td>api没找到
</td></tr><tr><td>100005</td><td>插件未安装或者未授权
</td></tr><tr><td>100006</td><td>客户端密匙不合法
</td></tr><tr><td>100007</td><td>客户端已被绑定
</td></tr><tr><td>100008</td><td>客户端申请权限超出允许范围
</td></tr><tr><td>100009</td><td>调用方法数据格式错误
</td></tr><tr><td>100010</td><td>权限列表丢失
</td></tr><tr><td>100011</td><td>校验参数不合法
</td></tr><tr><td>100012</td><td>客户端未绑定
</td></tr><tr><td>100013</td><td>客户端密匙丢失
</td></tr><tr><td>100014</td><td>校验失败
</td></tr><tr><td>100015</td><td>无权限
</td></tr><tr><td>100016</td><td>app_id或者client_id不合法
</td></tr><tr><td>100017</td><td>数据格式应该为application/json
</td></tr><tr><td>100018</td><td>调用client端接口的时候发现未知的方法
</td></tr><tr><td>100019</td><td>请输入客户端ID:client_id
</td></tr></tbody></table>
</div>
        
        
      </div>
      
    <div id="attachments" class="collapsed">
        <h3 class="foldable"><a id="no1" href="https://code.hiwifi.com/wiki/hiwifi/openapi#no1">附件</a></h3>
        <ul>
            <li>
    <a href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/bindcall.png" title="查看附件">bindcall.png</a><a href="./hiwifi openapi – HiWiFi_files/bindcall.png" class="trac-rawlink" title="下载">​</a>
       (<span title="16579 字节">16.2 KB</span>) -
      added by <em>631761418@…</em> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2014-05-21T12%3A05%3A01%2B08%3A00&precision=second" title="时间线中的2014-05-21T12:05:01+08:00">14个月</a> ago.
            </li>
            <li>
    <a href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/calla.png" title="查看附件">calla.png</a><a href="https://code.hiwifi.com/raw-attachment/wiki/hiwifi/openapi/calla.png" class="trac-rawlink" title="下载">​</a>
       (<span title="41309 字节">40.3 KB</span>) -
      added by <em>631761418@…</em> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2014-05-21T12%3A05%3A17%2B08%3A00&precision=second" title="时间线中的2014-05-21T12:05:17+08:00">14个月</a> ago.
            </li>
            <li>
    <a href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/callb.png" title="查看附件">callb.png</a><a href="./hiwifi openapi – HiWiFi_files/callb.png" class="trac-rawlink" title="下载">​</a>
       (<span title="23260 字节">22.7 KB</span>) -
      added by <em>631761418@…</em> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2014-05-21T12%3A05%3A28%2B08%3A00&precision=second" title="时间线中的2014-05-21T12:05:28+08:00">14个月</a> ago.
            </li>
            <li>
    <a href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/clientcall.png" title="查看附件">clientcall.png</a><a href="./hiwifi openapi – HiWiFi_files/clientcall.png" class="trac-rawlink" title="下载">​</a>
       (<span title="19520 字节">19.1 KB</span>) -
      added by <em>631761418@…</em> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2014-05-21T12%3A05%3A38%2B08%3A00&precision=second" title="时间线中的2014-05-21T12:05:38+08:00">14个月</a> ago.
            </li>
            <li>
    <a href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/openapi_java_sdk.zip" title="查看附件">openapi_java_sdk.zip</a><a href="https://code.hiwifi.com/raw-attachment/wiki/hiwifi/openapi/openapi_java_sdk.zip" class="trac-rawlink" title="下载">​</a>
       (<span title="28987 字节">28.3 KB</span>) -
      added by <em>jacquesqiao</em> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2014-10-21T16%3A41%3A54%2B08%3A00&precision=second" title="时间线中的2014-10-21T16:41:54+08:00">9个月</a> ago.
            </li>
            <li>
    <a href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/openapi_demo.php" title="查看附件">openapi_demo.php</a><a href="https://code.hiwifi.com/raw-attachment/wiki/hiwifi/openapi/openapi_demo.php" class="trac-rawlink" title="下载">​</a>
       (<span title="840 字节">840 字节</span>) -
      added by <em>jacquesqiao</em> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2014-10-21T16%3A42%3A24%2B08%3A00&precision=second" title="时间线中的2014-10-21T16:42:24+08:00">9个月</a> ago.
            </li>
            <li>
    <a href="https://code.hiwifi.com/attachment/wiki/hiwifi/openapi/demo.tgz" title="查看附件">demo.tgz</a><a href="https://code.hiwifi.com/raw-attachment/wiki/hiwifi/openapi/demo.tgz" class="trac-rawlink" title="下载">​</a>
       (<span title="1192 字节">1.2 KB</span>) -
      added by <em>jacquesqiao</em> <a class="timeline" href="https://code.hiwifi.com/timeline?from=2015-02-06T12%3A49%3A41%2B08%3A00&precision=second" title="时间线中的2015-02-06T12:49:41+08:00">5个月</a> ago.
              <q>一个包含插件和接口调用api的完整的示例</q>
            </li>
        </ul>
    </div>

    </div>
    <div id="altlinks">
      <h3>用其他格式下载:</h3>
      <ul>
        <li class="last first">
          <a rel="nofollow" href="https://code.hiwifi.com/wiki/hiwifi/openapi?format=txt">纯文本</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr>
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="./hiwifi openapi – HiWiFi_files/trac_logo_mini.png" height="30" width="107" alt="Trac Powered"></a>
      <p class="left">由 <a href="http://www.edgewall.org/">Edgewall Software</a> 的 <a href="https://code.hiwifi.com/about"><strong>Trac 0.12.5</strong></a><br>
        提供动力</p>
      <p class="right">请访问Trac开源项目<br><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  
</body></html>