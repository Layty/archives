#!/bin/sh

# Attention: 此文件被大量改动，不适合作为模板使用！

set -x

Parameter_num=$#
Parameter_one=$1
PathNow=`dirname $0`  #当前执行appshell的路径
PathInstall="/opt/app"
LastValue=
IpkName="ExtremeExFAT*.ipk"
BinName="ExtremeExFAT"

#1，判断参数是否合法
FunParamLegal()
{
	if [ ${Parameter_num} -ne 1 ];then
		echo "Fail:Parameter Err."
		exit 1
	fi
}

#查看进程号
CheckProgressNum()
{
	local L_NumProgress=""
	local L_Line=""
	local L_TmpFile="/tmp/NumProgress"
	local L_Tmp=""
	
	ps | grep "./${BinName}" > ${L_TmpFile}
	
	while read L_Line
	do
		L_Tmp=`echo ${L_Line} | grep "grep ./${BinName}"`
		if [ "${L_Tmp}" == "" ];then
			L_Tmp=`echo ${L_Line} | awk -F " " '{print $5}' | awk -F " " '{print $1}'`
			if [ "${L_Tmp}" != "./${BinName}" ];then
				continue
			else
				L_NumProgress=`echo ${L_Line} | awk -F " " '{print $1}'`
				break
			fi
		fi
		
		break			
	done < ${L_TmpFile}

	rm -f ${L_TmpFile}
	
	echo ${L_NumProgress}
}


#安装函数
Install()
{
	local L_ExitStatus=0

	#进入当前 appshell 的目录
	cd ${PathNow}
	
	#查看/opt/app 目录是否存在 ,如果不存在则创建这样一个目录
	if [ ! -d "${PathInstall}" ];then
		mkdir -p ${PathInstall}
	fi
	
	#ipk 文件存在
	if [ -f ${IpkName} ];then
		tar xzvf ${IpkName} -C ${PathInstall}
		LastValue=$?
		if [ ${LastValue} -eq 0 ];then
			mv -f /etc/hotplug.d/block/40-mount /etc/hotplug.d/block/40-mount.ExtremeExFATBackup
			mv -f ${PathInstall}/ExtremeExFAT/etc/40-mount /etc/hotplug.d/block/40-mount
			mv -f ${PathInstall}/ExtremeExFAT/bin/* /usr/bin/
			mv -f ${PathInstall}/ExtremeExFAT/lib/* /usr/lib/
			sync
			echo "Success."
			L_ExitStatus=0
		else
			echo "Fail:Install Err."
			L_ExitStatus=3
		fi
	else
		echo "Fail:Install file is not exist."
		L_ExitStatus=2
	fi
	cd -
	exit ${L_ExitStatus}
}

#卸载函数
unInstall()
{
	local L_ExitStatus=0
	local L_NumProgress=""
	
	#进入当前 appshell 的目录
	cd ${PathNow}
		rm  -fr ../ExtremeExFAT
	cd -
	
	#删除其他
	rm -f /etc/hotplug.d/block/40-mount
	mv -f /etc/hotplug.d/block/40-mount.ExtremeExFATBackup /etc/hotplug.d/block/40-mount
	rm -f /usr/bin/fusermount
	rm -f /usr/bin/mount.exfat-fuse
	rm -f /usr/bin/mount.fuse
	rm -f /usr/bin/ulockmgr_server
	rm -f /usr/lib/libfuse.so
	rm -f /usr/lib/libfuse.so.2
	rm -f /usr/lib/libfuse.so.2.7.4
	rm -f /usr/lib/libulockmgr.so
	rm -f /usr/lib/libulockmgr.so.1
	rm -f /usr/lib/libulockmgr.so.1.0.1
	sync
	
	exit ${L_ExitStatus}
}

#启动函数
Start()
{
	local L_ExitStatus=0
	echo "Success."
	L_ExitStatus=0

	exit ${L_ExitStatus}
}

#停止函数
Stop()
{
	local L_ExitStatus=0
	echo "Success."
	L_ExitStatus=0

	exit ${L_ExitStatus}
}


#重新启动函数
Restart()
{
	local L_ExitStatus=0
	echo "Success."
	L_ExitStatus=0

	exit ${L_ExitStatus}
}

#查看运行状态函数
CheckRunStatus()
{
	local L_ExitStatus=0
	echo "Success."
	L_ExitStatus=0

	exit ${L_ExitStatus}
}

#主函数
Main()
{
	#安装
	if [ "${Parameter_one}" = "install" ];then
		Install
	
	#卸载
	elif [ "${Parameter_one}" = "uninstall" ];then
		unInstall
	
	#启动
	elif [ "${Parameter_one}" = "start" ];then
		Start
	
	#停止
	elif [ "${Parameter_one}" = "stop" ];then
		Stop	
	
	#重启
	elif [ "${Parameter_one}" = "restart" ];then
		Restart
		
	#查看运行状态
	elif [ "${Parameter_one}" = "runstatus" ];then
		CheckRunStatus
		
	#输入参数错误
	else
		echo "ERR:Parameter Err."
		exit 1	
	fi
}

#检查参数是否合法
FunParamLegal

#执行主函数
Main
